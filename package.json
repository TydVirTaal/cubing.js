{
  "name": "cubing",
  "version": "0.17.0",
  "description": "A collection of Javascript cubing libraries.",
  "author": "The js.cubing.net team",
  "type": "module",
  "types": "dist/types/index.d.ts",
  "license": "GPL-3.0-or-later",
  "repository": "github:cubing/cubing.js",
  "dependencies": {
    "@types/three": "^0.126.1",
    "@types/web-bluetooth": "0.0.4",
    "three": "^0.126.1"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.14.2",
    "@babel/preset-typescript": "^7.13.0",
    "@babylonjs/core": "^4.2.0",
    "@snowpack/plugin-typescript": "^1.2.1",
    "@types/jest": "^26.0.23",
    "@typescript-eslint/eslint-plugin": "^4.25.0",
    "@typescript-eslint/parser": "^4.25.0",
    "babel-jest": "^27.0.1",
    "esbuild": "^0.12.5",
    "eslint": "^7.27.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-html": "^6.1.2",
    "eslint-plugin-prettier": "^3.4.0",
    "jest": "^27.0.1",
    "jszip": "^3.5.0",
    "peggy": "^1.1.0",
    "prettier": "^2.2.1",
    "puppeteer": "^8.0.0",
    "snowpack": "^3.5.0",
    "ts-jest": "^27.0.1",
    "typescript": "^4.3.2",
    "yargs": "^16.2.0"
  },
  "scripts": {
    "build": "npm run clean && npm run build-esm && npm run build-cjs && npm run build-bundle-global && npm run build-types && npm run build-bin",
    "build-esm": "npx esbuild --target=es2015 --bundle --external:three --splitting --format=esm --sourcemap --outdir=dist/esm src/cubing/index.ts src/cubing/alg/index.ts src/cubing/bluetooth/index.ts src/cubing/kpuzzle/index.ts src/cubing/protocol/index.ts src/cubing/puzzle-geometry/index.ts src/cubing/puzzles/index.ts src/cubing/stream/index.ts src/cubing/twisty/index.ts && cp -R src/dist-static/esm/* dist/esm",
    "build-cjs": "npx esbuild --target=es2015 --bundle --external:three --format=cjs --outfile=dist/cjs/index.js src/cubing/index.ts && cp -R src/dist-static/cjs/* dist/cjs",
    "build-bundle-global": "npx esbuild --target=es2015 --bundle --format=cjs --minify --outdir=dist/bundle-global src/cubing/cubing.bundle-global.ts",
    "build-types": "npx tsc --build ./tsconfig-types.json",
    "build-bin": "npx esbuild --target=es2015 --bundle --external:three --format=esm --outfile=dist/bin/puzzle-geometry-bin.js src/bin/puzzle-geometry-bin.ts",
    "build-experiments": "npx snowpack build",
    "generate-js": "npm run generate-js-parsers && npm run generate-js-svg",
    "generate-js-parsers": "npx peggy --format es src/cubing/kpuzzle/parser/parser-peggy.peggy",
    "generate-js-svg": "echo \"TODO: Generating JS for SVGs is not implemented yet.\"",
    "dev": "npx snowpack dev",
    "clean": "rm -rf dist .cache .parcel-cache coverage .rpt2_cache /tmp/cubing-js-parcel",
    "test": "npm run test-jest && npm run lint && npm run test-import-restrictions && npm run test-tsc # keep test.yml in sync with this",
    "test-experiments": "node src/test-experiments/test.js",
    "test-import-restrictions": "node src/import-restrictions/build.js",
    "test-jest": "npx jest --collectCoverage",
    "test-node-require": "node src/dist-test/require.cjs",
    "test-node-import": "node src/dist-test/import.mjs",
    "test-tsc": "npm run build-types && npx tsc --build ./tsconfig.json",
    "format": "npx eslint --fix --ext=js,ts .; npx prettier --write src */index.d.ts",
    "setup": "npm install",
    "lint": "npx eslint --ext=js,ts .",
    "prepack": "npm run clean && npm run build && npm run test-node-require && npm run test-node-import",
    "parcel-build-for-twizzle-net": "echo \"parcel-build-for-twizzle-net is currently unimplemented.\""
  },
  "targets": {
    "twizzle-net": {},
    "experiments-cubing-net": {}
  },
  "keywords": [
    "cubing",
    "speedcubing",
    "puzzle",
    "visualization",
    "kpuzzle",
    "cuble",
    "bluetooth",
    "rubik",
    "rubik's"
  ],
  "eslintConfig": {
    "root": true,
    "parserOptions": {
      "project": "./tsconfig.json"
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars-experimental": "error",
      "@typescript-eslint/no-non-null-assertion": "off",
      "eqeqeq": "error",
      "quote-props": [
        "error",
        "consistent-as-needed"
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ]
    },
    "ignorePatterns": [
      "/coverage",
      "/dist",
      "/src/dist-static",
      "/snowpack.config.cjs",
      "parser-peggy.js"
    ],
    "env": {
      "commonjs": true,
      "browser": true,
      "node": true
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "all",
    "tabWidth": 2,
    "quoteProps": "consistent"
  },
  "exports": {
    ".": {
      "require": "./dist/cjs/index.js",
      "import": "./index.js",
      "types": "./types/types/index.d.ts"
    },
    "./alg": {
      "require": "./dist/cjs/alg/index.js",
      "import": "./dist/esm/alg/index.js",
      "types": "./dist/types/alg/index.d.ts"
    },
    "./bluetooth": {
      "require": "./dist/cjs/bluetooth/index.js",
      "import": "./dist/esm/bluetooth/index.js",
      "types": "./dist/types/bluetooth/index.d.ts"
    },
    "./kpuzzle": {
      "require": "./dist/cjs/kpuzzle/index.js",
      "import": "./dist/esm/kpuzzle/index.js",
      "types": "./dist/types/kpuzzle/index.d.ts"
    },
    "./notation": {
      "require": "./dist/cjs/notation/index.js",
      "import": "./dist/esm/notation/index.js",
      "types": "./dist/types/notation/index.d.ts"
    },
    "./protocol": {
      "require": "./dist/cjs/protocol/index.js",
      "import": "./dist/esm/protocol/index.js",
      "types": "./dist/types/protocol/index.d.ts"
    },
    "./puzzle-geometry": {
      "require": "./dist/cjs/puzzle-geometry/index.js",
      "import": "./dist/esm/puzzle-geometry/index.js",
      "types": "./dist/esm/types/puzzle-geometry/index.d.ts"
    },
    "./puzzles": {
      "require": "./dist/cjs/puzzles/index.js",
      "import": "./dist/esm/puzzles/index.js",
      "types": "./dist/esm/types-geometry/index.d.ts"
    },
    "./stream": {
      "require": "./dist/cjs/stream/index.js",
      "import": "./dist/esm/stream/index.js",
      "types": "./dist/types/stream/index.d.ts"
    },
    "./twisty": {
      "require": "./dist/cjs/twisty/index.js",
      "import": "./dist/esm/twisty/index.js",
      "types": "./dist/types/twisty/index.d.ts"
    }
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      "@babel/preset-typescript"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src"
    ],
    "modulePathIgnorePatterns": [
      "<rootDir>/src/test-experiments/"
    ]
  },
  "files": [
    "/LICENSE.md",
    "/README.md",
    "/package.json",
    "/package-lock.json",
    "/dist/**/*",
    "/src/cubing/**/*",
    "/docs/**/*",
    "/*/package.json",
    "/*/index.d.ts"
  ]
}
